
library(magrittr)
library(tidyverse)
library(tidyr)
library(stringr)
library(readxl)


# Function that prints unmatched countries of two data sets

country_match <- function(data, data2){
  if (length(unique(data$country)) == length(intersect(unique(data$country), unique(data2$country))) | 
      length(unique(data2$country)) == length(intersect(unique(data$country), unique(data2$country)))){
    cat("Countries match")
  } else {
    a <- setdiff(unique(data$country), intersect(unique(data$country), unique(data2$country)))
    b <- setdiff(unique(data2$country), intersect(unique(data$country), unique(data2$country)))
    number <- min(c(length(a),length(b)))
    
    if (length(a) < length(b)) {
      unmatch <- a
    }else{
      unmatch <- b
    }
    cat(paste("Unmatched countries:",number), fill =TRUE)
    unmatch
  }
  
}





per_capita_gdp <- read_excel("per_capita_gdp.xls", 
                             sheet = "PerCapita GDP")
View(per_capita_gdp)


#Combining gdp and JST data
data2 <- macrodata_crisis_pred
data2 %<>% select(-1)
data <- per_capita_gdp

data <- data %>% dplyr::select(-c(3,5,7,9,11)) 
data %<>% dplyr::slice(-c(1,3,16,21,22,23,28,29,37,38,48,64,65,74,75,91,92,93,94,111,
                   112,119,120,121,137,138,139,192,193,194,195,196,197))

names(data) <- data[1, ]
data <- data[-1, ]
colnames(data)[1] <- "country"

data %<>% select(-2,-3,-4,-5, -6)


data <- data[ ,(!is.na(country))]
data %<>% filter(!is.na(country))
rownames(data) <- as.vector(data$country)
data <- data %>% dplyr::select(-1)

#transpose#
aa <- add_rownames(data) %>% 
  gather(var, value, -rowname) %>% 
  spread(rowname, value) 

data <- aa %>% gather(key = "country", value = "gdp", -var)
colnames(data)[1] <- "year"

data2$year <- as.character(data2$year)


# matching countries
country_match(data, data2)
data$country[data$country == "United States"] <- "USA"
data$country[data$country == "United Kingdom"] <- "UK"


newdata <- data %>% full_join(data2, by = c("country", "year"))





            
        #Crisis dummy data preparation

result <- NULL
j <- 0
for (cr in 1:4){
  j <- j+1
  cr <- NULL
  for (i in 3:25){
    try(cr[[i]] <- read_xls(paste0("crisis dummies",j,".xls"), sheet = i))
  }
  cr <- Filter(function(x) {nrow(x) > 0}, cr)
  
  #naming the list
  Names <- NULL
  for (i in 3:length(cr)){
    try(Names[i] <- colnames(cr[[i]][1]))
  }
  names(cr) <- Names
  for (i in 3:length(cr)){
    cr[[i]] %<>% as.data.frame()
    cr[[i]] <- transform(cr[[i]], year = as.numeric(cr[[i]][ ,1])) %>% filter(year > 1819)
    cr[[i]] %<>% mutate(country = rep(gsub("..Crises.dates..1800.2010","", colnames(cr[[i]])[1]), nrow(cr[[i]]))) %>%
      mutate(country = gsub("[.]", " ", country)) %>%
      select(year, country, currencyC = 2, inflationC = 3, stock_marketC = 4,
             external_debtC = 6, bankingC = 7, Crisis_tally = 8)
  }
  result <- append(result, cr)
}
crisis_data <- result[c(-1,-2)]


#removing empty elements of the list
crisis_data <- Filter(function(a) any(!is.na(a)), crisis_data)

#year column into character
crisis_data %<>% map(~mutate_at(.x, vars("year"), as.character))


#combining the elements of the list
crisis_data <- bind_rows(crisis_data)

#matchin countries
countries <- country_match(newdata, crisis_data)
unique(newdata$country)
unique(crisis_data$country)

crisis_data$country[crisis_data$country == "United State"] <- "USA"
crisis_data$country[crisis_data$country == "United Kingdom"] <- "UK"
crisis_data$country[crisis_data$country == "Korea"] <- "South Korea"
newdata$country[newdata$country == "Russian Federation"] <- "Russia"





#Join crisis variable data and macrodata

comb_data <- full_join(newdata, crisis_data, by = c("year","country")) %>%
             #filter(country %in% unique(macrodata_crisis_pred$country)) %>%   # <- consider leaving that later
             mutate(gdp_growth = c(0, diff(log(gdp)))) %>%
             select(-crisisD, -id, -gdp) %>%
             select(year, country, gdp_growth, everything()) %>%
             filter(!country %in% countries)  



#save data
write.csv(comb_data, file ="macrodata_with_crisisdummies.csv")





# Combining with sector weight data

sectordata <- sectordata
sectordata$year <- as.character(sectordata$year)
macro_sector_crisis <- full_join(comb_data, sectordata, by = c("year", "country"))
macro_sector_crisis$year <- as.character(macro_sector_crisis$year)
unique(macro_sector_crisis$country)



write.csv(macro_sector_crisis, file = "macro_sector_crisis.csv")





# join debt_gdp data

macro_sector_crisis$year <- as.character(macro_sector_crisis$year)
debt_gdp_data$year <- as.character(debt_gdp_data$year)

macro_4 <- full_join(macro_sector_crisis, debt_gdp_data, by = c("country", "year"))
macro_4$year <- as.numeric(macro_4$year)
macro_4 %<>% filter(!is.na(year))



unique(macro_4$country)
unique(macro_sector_crisis$country)
unique(debt_gdp_data$country)



macro_4_core <- macro_4 %>% filter(country %in% unique(macrodata_crisis_pred$country))
macro_4_core %<>% arrange(country, year)
macro_4_core %<>% distinct()




write.csv(macro_4, file = "macro_4.csv")
write.csv(macro_4_core, file = "macro_4_core.csv")
